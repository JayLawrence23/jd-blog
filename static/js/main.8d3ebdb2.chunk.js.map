{"version":3,"sources":["Navbar.jsx","BlogList.jsx","useFetch.js","Home.jsx","Create.jsx","BlogDetails.jsx","NotFound.jsx","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d3ebdb2.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h1>The Jay Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New Blog</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs, title, }) => {\r\n\r\n    return (\r\n        <div className=\"blog-list\">\r\n            <h1>{title}</h1>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2>{blog.title}</h2>\r\n                        <p>Written by {blog.author}</p>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogList;","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\r\n    const [data, setData] = useState(null); // Artificial data\r\n    const [isPending, setIsPending] = useState(true);  \r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => { //when the components renders, what is the effects\r\n        const abortCont = new AbortController();\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            fetch(url, { signal: abortCont.signal })\r\n            .then(res => {\r\n                if(!res.ok){\r\n                    throw Error('Could not fetch the data for that resource');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                if(err.name === 'AbortError'){\r\n                    console.log('fetch aborted');\r\n                } else{\r\n                    setIsPending(false);\r\n                    setError(err.message);\r\n                }\r\n            })\r\n        }, 500);\r\n\r\n        return () => abortCont.abort();\r\n    }, [url]);\r\n\r\n    return { data, isPending, error}\r\n}\r\n \r\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n    \r\n    const { data, isPending, error } = useFetch('https://my-json-server.typicode.com/JayLawrence23/jay-blog'); //destructing variable\r\n    \r\n\r\n    return (\r\n        <div className=\"home\">\r\n            { error && <div> {error} </div>}\r\n            { isPending && <div> Loading... </div>}\r\n            {data && <BlogList blogs={data} title=\"All Blogs\" />}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('mario');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = { title, body, author };\r\n\r\n        setIsPending(true);\r\n\r\n        fetch('https://my-json-server.typicode.com/JayLawrence23/jay-blog', {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log('new blog added');\r\n            setIsPending(false);\r\n            // history.go(-1) //to go back\r\n            history.push('/'); // to redirect to Home\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    required\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)} // to insert into state\r\n                />\r\n\r\n                <label>Blog Content</label>\r\n                <textarea \r\n                    required\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)} // to insert into state\r\n                >\r\n                </textarea>\r\n\r\n                <label>Blog Author</label>\r\n                <select\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)} // to insert into state\r\n                >\r\n                    <option value=\"mario\">Mario</option>\r\n                    <option value=\"jay\">Jay</option>\r\n                </select>\r\n\r\n                { !isPending && <button>Add Blog</button>}\r\n                { isPending && <button disabled>Adding Blog...</button>}\r\n\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst BlogDetails = () => {\r\n\r\n    \r\n\r\n    const { id } = useParams(); //to get the parameters in \r\n    const { data: blog, isPending, error } = useFetch('https://my-json-server.typicode.com/JayLawrence23/jay-blog/' + id);\r\n    const history = useHistory();\r\n\r\n    const handleDelete = () => {\r\n        fetch('http://localhost:8000/blogs/' + blog.id, {\r\n            method: 'DELETE'\r\n        }).then((e) => {\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div>}\r\n            { error && <div>{error} </div>}\r\n            { blog &&\r\n                <article>\r\n                    <h2>{ blog.title }</h2>\r\n                    <p>Written by { blog.author }</p>\r\n                    <div>{ blog.body } </div>\r\n                    <button onClick={handleDelete}>Delete</button>\r\n                </article>\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found.</p>\r\n            <Link to=\"/\">Back to Homepage</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NotFound;","\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nconst App = () => {\n\n  return (\n\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create/>\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails/>\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}